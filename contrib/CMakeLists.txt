if(BUILD_SHARED_LIBS)
    find_package(CURL 7.77.0 REQUIRED)
    set_target_properties(CURL::libcurl PROPERTIES IMPORTED_GLOBAL TRUE)
    add_library(libcurl ALIAS CURL::libcurl)

    find_package(Libevent 2.1.12 REQUIRED)
    add_library(event_core ALIAS libevent::core)
    add_library(event_extra ALIAS libevent::extra)
    if(NOT WIN32)
        add_library(event_thread ALIAS libevent::pthreads)
    endif()
else()
    set(CARES_SHARED OFF CACHE BOOL "build shared c-ares")
    set(CARES_STATIC ON CACHE BOOL "build static c-ares")
    set(CARES_INSTALL OFF CACHE BOOL "enable c-ares install targets")
    set(CARES_BUILD_TOOLS OFF CACHE BOOL "build c-ares tools")
    unset(RANDOM_FILE CACHE)
    add_subdirectory(c-ares EXCLUDE_FROM_ALL)

    set(ENABLE_LIB_ONLY ON CACHE BOOL "build only nghttp2 lib")
    set(ENABLE_STATIC_LIB ON CACHE BOOL "build static nghttp2")
    set(ENABLE_SHARED_LIB OFF CACHE BOOL "build shared nghttp2")
    set(ENABLE_DOC OFF CACHE BOOL "build nghttp2 doc")
    add_subdirectory(nghttp2 EXCLUDE_FROM_ALL)

    if(WIN32)
        set(CMAKE_USE_SCHANNEL ON CACHE BOOL "enable curl with schannel")
    elseif(APPLE)
        set(CMAKE_USE_SECTRANSP ON CACHE BOOL "enable curl with secure transport")
    else()
        add_subdirectory(libressl EXCLUDE_FROM_ALL)
        set(USE_OPENSSL ON CACHE BOOL "enable curl with openssl")
    endif()

    set(CMAKE_USE_OPENSSL OFF CACHE BOOL "enable curl with openssl")
    set(CMAKE_USE_LIBSSH2 OFF CACHE BOOL "enable curl with libssh2")
    set(CURL_DISABLE_LDAP ON CACHE BOOL "disable curl with ldap")
    set(CURL_DISABLE_LDAPS ON CACHE BOOL "disable curl with ldaps")
    set(CURL_ENABLE_EXPORT_TARGET OFF CACHE BOOL "enable curl export target")
    set(CURL_ZLIB OFF CACHE BOOL "enable curl with zlib")
    set(USE_ARES ON CACHE BOOL "enable curl with c-ares")
    set(USE_LIBIDN2 OFF CACHE BOOL "enable curl with idn2")
    set(SSL_ENABLED ON CACHE BOOL "enable curl with ssl")
    set(ENABLE_THREADED_RESOLVER OFF CACHE BOOL "enable curl threaded resolver")
    add_subdirectory(curl EXCLUDE_FROM_ALL)
    target_include_directories(libcurl PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/nghttp2/lib/includes
        ${CMAKE_CURRENT_BINARY_DIR}/nghttp2/lib/includes
    )
    target_link_libraries(libcurl c-ares nghttp2_static)
    target_compile_definitions(libcurl PRIVATE USE_NGHTTP2 USE_ARES)

    if (USE_OPENSSL)
        target_link_libraries(libcurl ssl)
        target_compile_definitions(libcurl PRIVATE USE_OPENSSL)
    endif()

    set(EVENT__DISABLE_OPENSSL ON CACHE BOOL "build libevent without OpenSSL")
    set(EVENT__DISABLE_MBEDTLS ON CACHE BOOL "build libevent without mbedTLS")
    set(EVENT__MSVC_STATIC_RUNTIME OFF CACHE BOOL "link libevent with static runtime libraries")
    set(EVENT__DISABLE_TESTS ON CACHE BOOL "disable libevent tests")
    if(BUILD_SHARED_LIBS)
        set(EVENT__LIBRARY_TYPE SHARED CACHE STRING "build shared libevent")
    else()
        set(EVENT__LIBRARY_TYPE STATIC CACHE STRING "build static libevent")
    endif()
    add_subdirectory(libevent EXCLUDE_FROM_ALL)
endif()
